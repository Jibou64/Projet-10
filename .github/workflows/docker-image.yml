name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Front-end steps
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Check if front directory exists
        run: if [ -d "./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/front" ]; then echo "Front-end directory exists"; else echo "Front-end directory does not exist"; exit 1; fi

      - name: Cache Node.js modules
        if: success()
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/front/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for Front-end
        if: success()
        run: npm install
        working-directory: ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/front

      - name: Build Front-end
        if: success()
        run: npm run build
        working-directory: ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/front

      - name: Run Front-end tests and generate coverage
        if: success()
        run: npm run test -- --code-coverage --watch=false
        working-directory: ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/front

      # Back-end steps
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Check if back directory exists
        run: if [ -d "./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-Ci-CD-main/back" ]; then echo "Back-end directory exists"; else echo "Back-end directory does not exist"; exit 1; fi

      - name: Cache Maven packages
        if: success()
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/back/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies for Back-end
        if: success()
        run: mvn clean install
        working-directory: ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/back

      - name: Run Back-end tests and generate coverage
        if: success()
        run: mvn test
        working-directory: ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/back

      - name: Generate JaCoCo report
        if: success()
        run: mvn jacoco:report
        working-directory: ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/back

      - name: SonarQube Scan
        if: success()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=my_project_key -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/back

      # Build Docker images and push to DockerHub
      - name: Log in to Docker Hub
        if: success()
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Front-end Docker image
        if: success()
        run: |
          docker build -t bobapp-front ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/front
          docker tag bobapp-front "${{ secrets.DOCKER_USERNAME }}/bobapp-front:${{ github.sha }}"
          docker push "${{ secrets.DOCKER_USERNAME }}/bobapp-front:${{ github.sha }}"

      - name: Build and push Back-end Docker image
        if: success()
        run: |
          docker build -t bobapp-back ./Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-main/back
          docker tag bobapp-back "${{ secrets.DOCKER_USERNAME }}/bobapp-back:${{ github.sha }}"
          docker push "${{ secrets.DOCKER_USERNAME }}/bobapp-back:${{ github.sha }}"
